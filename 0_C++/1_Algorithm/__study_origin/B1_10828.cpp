/* B_10828
정수를 저장하는 스택을 구현한 다음, 입력으로 주어지는 명령을 처리하는 프로그램을 작성하시오.

명령은 총 다섯 가지이다.

- push X: 정수 X를 스택에 넣는 연산이다.
- pop: 스택에서 가장 위에 있는 정수를 빼고, 그 수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.
- size: 스택에 들어있는 정수의 개수를 출력한다.
- empty: 스택이 비어있으면 1, 아니면 0을 출력한다.
- top: 스택의 가장 위에 있는 정수를 출력한다. 만약 스택에 들어있는 정수가 없는 경우에는 -1을 출력한다.

첫째 줄에 주어지는 명령의 수 N (1 ≤ N ≤ 10,000)이 주어진다. 둘째 줄부터 N개의 줄에는 명령이 하나씩 주어진다. 주어지는 정수는 1보다 크거나 같고, 100,000보다 작거나 같다. 문제에 나와있지 않은 명령이 주어지는 경우는 없다.
*/
#include <iostream>
#include <string>

using namespace std;

int main()
{
	/* 동적할당 이용한 version
		int inputCmd;	 //Cmd 개수 = N
	string inputData;	//명령어 - ex) push, pop, ...etc
	int* stackA; //스택 저장 변수
	int countNum = 0;

	cin >> inputCmd;
	stackA = new int(inputCmd);
	cin.ignore();

	while (inputCmd--)
	{
		cin >> inputData;
		
		getline(cin, inputData);

		if (inputData == "pop")
		{
			if (countNum)
			{
				cout << stackA[countNum - 1] << endl;
				stackA[countNum - 1] = 0;
				countNum--;
			}
			else
			{
				cout << "-1" << endl;
			}
		}
		else if (inputData == "size")
		{
			cout << countNum << endl;
		}
		else if (inputData == "empty")
		{
			if (countNum)
				cout << "0" << endl;
			else
				cout << "1" << endl;
		}
		else if (inputData == "top")
		{
			if (countNum)
			{
				cout << stackA[countNum - 1] << endl;
			}
			else
			{
				cout << "-1" << endl;
			}
		}
		else // push X
		{
			//int popNum;
			//cin >> popNum;
			countNum++;
			stackA[countNum - 1] = stoi(inputData.substr(5));
			//stackA[countNum - 1] = popNum;
		}
	}
	return 0;
	*/
	int inputCmd;	 //Cmd 개수 = N
	string inputData;	//명령어 - ex) push, pop, ...etc
	int stackA[10001]; //스택 저장 변수
	int countNum = 0;

	cin >> inputCmd;

	while (inputCmd--)
	{
		cin >> inputData;

		if (inputData == "pop")
		{
			if (countNum)
			{
				cout << stackA[countNum - 1] << endl;
				stackA[countNum - 1] = 0;
				countNum--;
			}
			else
			{
				cout << "-1" << endl;
			}
		}
		else if (inputData == "size")
		{
			cout << countNum << endl;
		}
		else if (inputData == "empty")
		{
			if (countNum)
				cout << "0" << endl;
			else
				cout << "1" << endl;
		}
		else if (inputData == "top")
		{
			if (countNum)
			{
				cout << stackA[countNum - 1] << endl;
			}
			else
			{
				cout << "-1" << endl;
			}
		}
		else // push X
		{
			int popNum;
			cin >> popNum;
			countNum++;
			stackA[countNum - 1] = popNum;
		}
	}
	return 0;
}

